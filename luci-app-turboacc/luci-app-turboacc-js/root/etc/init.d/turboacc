#!/bin/sh /etc/rc.common

START=90
STOP=10

USE_PROCD=1

# 初始化配置
inital_conf() {
	config_load "turboacc"
	for opt in hw_wed hw_flow sw_flow sfe_flow bbr_cca fullcone_nat fullcone6; do
		config_get "$opt" "config" "$opt" "0"
	done

	[ ! -e "/lib/modules/$(uname -r)/nft_flow_offload.ko" ] && { sw_flow="0"; hw_flow="0"; }
	[ ! -e "/lib/modules/$(uname -r)/tcp_bbr.ko" ] && bbr_cca="0"
}

# 加载/卸载 SFE 模块
handle_sfe() {
	local action=$1
	[ "${sfe_flow}" -eq "1" ] || return 0
	local kernel_version=$(uname -r)
	if [ "$action" = "load" ]; then
		[ -e "/lib/modules/$kernel_version/shortcut-fe-cm.ko" ] && modprobe shortcut-fe-cm
		[ -e "/lib/modules/$kernel_version/fast-classifier.ko" ] && modprobe fast-classifier
	else
		rmmod shortcut_fe_cm
		rmmod fast_classifier
	fi
}

# 加载/卸载 WED 模块
handle_wed() {
	local action=$1
	[ "${hw_wed}" -eq "1" ] || return 0
	local kernel_version=$(uname -r)
	if [ "$action" = "load" ]; then
		if grep -Eq 'mediatek' /etc/openwrt_release && [ -e "/lib/modules/$kernel_version/mt7915e.ko" ]; then
			if ! grep -Eq 'mt7915e' /etc/modules.conf; then
				sed -i '$aoptions mt7915e wed_enable=Y' /etc/modules.conf
				rmmod mt7915e && sleep 1 && modprobe mt7915e && wifi up
			fi
		else
			echo "WED module not found or not supported!"
			return 1
		fi
	else
		sed -i '/mt7915e/d' /etc/modules.conf
		rmmod mt7915e && sleep 1 && modprobe mt7915e && wifi up
	fi
}

# 管理 firewall 和 dnsmasq 服务
manage_service() {
	local service=$1
	if ! /etc/init.d/$service status > /dev/null 2>&1; then
		/etc/init.d/$service start
	else
		/etc/init.d/$service reload
	fi
}

start_service() {
	inital_conf
	handle_firewall "enable"
	handle_sfe "load"
	handle_wed "load"

	[ "${bbr_cca}" -eq "1" ] && sysctl -w net.ipv4.tcp_congestion_control="bbr" || sysctl -w net.ipv4.tcp_congestion_control="cubic"

	manage_service "firewall"
	manage_service "dnsmasq"

	procd_open_instance
	procd_set_param command
	procd_set_param respawn
	procd_close_instance
}

stop_service() {
	inital_conf
	handle_firewall "disable"
	handle_sfe "unload"
	handle_wed "unload"

	[ "${bbr_cca}" -eq "1" ] && sysctl -w net.ipv4.tcp_congestion_control="cubic"

	/etc/init.d/firewall restart
	/etc/init.d/dnsmasq restart
}

restart_service() {
	stop_service
	start_service
}

handle_firewall() {
	local action=$1
	uci set firewall.@defaults[0].flow_offloading="${sw_flow}"
	uci set firewall.@defaults[0].flow_offloading_hw="${hw_flow}"
	uci set firewall.@defaults[0].fullcone="${fullcone_nat}"
	for i in $(uci show firewall | grep "^firewall.@zone\[[0-9]*\]\.fullcone6" | sed "s/=.*//g"); do
		uci set "$i"="${fullcone6}"
	done
	uci commit firewall
	[ "$action" = "disable" ] && uci set firewall.@defaults[0].flow_offloading="0" && uci set firewall.@defaults[0].flow_offloading_hw="0" && uci set firewall.@defaults[0].fullcone="0"
}

service_triggers() {
	procd_add_reload_trigger "turboacc"
}

